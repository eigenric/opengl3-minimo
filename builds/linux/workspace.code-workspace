{
  "folders": 
  [ { "name": "BUILD (linux)",
      "path": "."
    },
    { "name": "FUENTES",
      "path": "../../src"
    }
  ],

  "settings" : 
  {
    "C_Cpp.default.cppStandard": "c++20",

    // es importante decirle aquí a IntelliSense que use el compilador de GNU, 
    // fijando la variable "compilerPath" a lo que sea. Si no se hace así y se 
    // tiene también instalado el compilador clang, entonces vscode se hace un 
    // lio con los includes, y señala con subrayado errores de includes imposibles 
    // de quitar 
    "C_Cpp.default.compilerPath" : "/usr/bin/g++", 
    
    "C_Cpp.default.includePath"      : 
    [ 
      "${workspaceFolder:FUENTES}", 
      "${default}"
    ],
    "files.associations": {
      "array": "cpp",
      "atomic": "cpp",
      "bit": "cpp",
      "*.tcc": "cpp",
      "cctype": "cpp",
      "clocale": "cpp",
      "cmath": "cpp",
      "compare": "cpp",
      "concepts": "cpp",
      "cstdarg": "cpp",
      "cstddef": "cpp",
      "cstdint": "cpp",
      "cstdio": "cpp",
      "cstdlib": "cpp",
      "cstring": "cpp",
      "ctime": "cpp",
      "cwchar": "cpp",
      "cwctype": "cpp",
      "deque": "cpp",
      "unordered_map": "cpp",
      "vector": "cpp",
      "exception": "cpp",
      "algorithm": "cpp",
      "functional": "cpp",
      "iterator": "cpp",
      "memory": "cpp",
      "memory_resource": "cpp",
      "numeric": "cpp",
      "optional": "cpp",
      "random": "cpp",
      "string": "cpp",
      "string_view": "cpp",
      "system_error": "cpp",
      "tuple": "cpp",
      "type_traits": "cpp",
      "utility": "cpp",
      "initializer_list": "cpp",
      "iomanip": "cpp",
      "iosfwd": "cpp",
      "iostream": "cpp",
      "istream": "cpp",
      "limits": "cpp",
      "new": "cpp",
      "ostream": "cpp",
      "ranges": "cpp",
      "sstream": "cpp",
      "stdexcept": "cpp",
      "streambuf": "cpp",
      "cinttypes": "cpp",
      "typeinfo": "cpp"
    }
  },

   // indicar extensiones recomendadas y extensiones que no se deben usar (y que no queremos que se recomienden)
   "extensions": {
    "recommendations": 
    [ 
      "ms-vscode.cpptools", 
      "ms-vscode.cpptools-extension-pack", 
      "ms-vscode.cpptools-themes", 
      "slevesque.shader"    // soporte para archivos .glsl en GLSL
    ],
    "unwantedRecommendations": 
    [
      "ms-vscode.makefile-tools",  // no queremos que VS code gestione makefiles 
      "ms-vscode.cmake-tools"      // tampoco los archivos 'CMakeFiles.txt'
    ]
  },
}
